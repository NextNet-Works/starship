{{- range $relayer := .Values.relayers }}
{{- if eq $relayer.type "hermes" }}
{{ $defaultRelayer := get $.Values.defaultRelayers $relayer.type }}
{{ $initParams := dict "chains" $relayer.chains "port" $.Values.exposer.port }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $relayer.type }}-{{ $relayer.name }}
spec:
  serviceName: {{ $relayer.type }}-{{ $relayer.name }}
  replicas: {{ $relayer.replicas }}
  podManagementPolicy: "Parallel"
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: relayer
      app.kubernetes.io/type: {{ $relayer.type }}
      app.kubernetes.io/name: {{ $relayer.type }}-{{ $relayer.name }}
  template:
    metadata:
      annotations:
        quality: release
        role: api-gateway
        sla: high
        tier: gateway
      labels:
        app.kubernetes.io/instance: relayer
        app.kubernetes.io/type: {{ $relayer.type }}
        app.kubernetes.io/name: {{ $relayer.type }}-{{ $relayer.name }}
        app.kubernetes.io/version: {{ $.Chart.AppVersion }}
    spec:
      initContainers:
        {{/* Waits for all upstream chains before starting relayer, vai init containers */}}
        {{- include "devnet.init.wait" $initParams | indent 8 }}
        - name: init-relayer
          image: {{ $relayer.image | default $defaultRelayer.image }}
          imagePullPolicy: Always
          env:
            - name: KEYS_CONFIG
              value: "/keys/keys.json"
            - name: RELAYER_DIR
              value: "/root/.hermes"
          command:
            - bash
            - "-c"
            - |
              RLY_INDEX=${HOSTNAME##*-}
              echo "Relayer Index: $RLY_INDEX"

              mkdir -p $RELAYER_DIR
              cp /configs/config.toml $RELAYER_DIR/config.toml

              MNEMONIC=$(jq -r ".relayers[$RLY_INDEX].mnemonic" $KEYS_CONFIG)
              echo $MNEMONIC > $RELAYER_DIR/mnemonic.txt

              {{- range $i, $chain := $relayer.chains }}
              {{- range $fullchain := $.Values.chains }}
              {{- if eq $fullchain.name $chain }}
              echo "Creating key for {{ $chain }}..."
              hermes keys add \
                --chain {{ $chain }} \
                --mnemonic-file $RELAYER_DIR/mnemonic.txt \
                --key-name {{ $chain }} \
                {{- with index $.Values.defaultChains $fullchain.type }}
                --hd-path {{ .hdPath | quote }}
                {{- end }}
              {{- end }}
              {{- end }}
              {{- end }}

              hermes create channel \
                --a-chain {{ index $relayer.chains 0 }} \
                --b-chain {{ index $relayer.chains 1 }} \
                --a-port transfer \
                --b-port transfer \
                --new-client-connection --yes
          volumeMounts:
            - mountPath: /root
              name: relayer
            - mountPath: /configs
              name: relayer-config
            - mountPath: /keys
              name: keys
      containers:
        - name: relayer
          image: {{ $relayer.image | default $defaultRelayer.image }}
          imagePullPolicy: Always
          env:
            - name: RELAYER_DIR
              value: "/root/.hermes"
          command:
            - bash
            - "-c"
            - |
              RLY_INDEX=${HOSTNAME##*-}
              echo "Relayer Index: $RLY_INDEX"

              hermes start
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: "0.5"
              memory: 0.5Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          volumeMounts:
            - mountPath: /root
              name: relayer
            - mountPath: /configs
              name: relayer-config
      volumes:
        - name: relayer
          emptyDir: { }
        - name: relayer-config
          configMap:
            name: "{{ $relayer.type }}-{{ $relayer.name }}"
        - name: keys
          configMap:
            name: keys
---
{{- end }}
{{- end }}
